vversion: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf          # Global Nginx Config
      - ./nginx/reverse_proxy.conf:/etc/nginx/conf.d/reverse_proxy.conf  # Site Config
      - ./certbot/conf:/etc/letsencrypt                   
      - ./certbot/www:/var/www/certbot                   
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot --webroot-path /var/www/certbot --quiet; sleep 12h & wait $${!}; done;'"

  apache:
    build:
      context: ./apache
      dockerfile: Dockerfile.apache
    container_name: apache
    restart: always
    volumes:
      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf      # Global Apache Config
      - ./apache/apache_server.conf:/usr/local/apache2/conf/sites-enabled/apache_server.conf # Site Config

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: backend
    restart: always
    environment:
      - FLASK_ENV=production
    ports:
      - "5000:5000"

  frontend:
    build:
      context: ./frontend/my-react-app
      dockerfile: Dockerfile.frontend
    container_name: frontend
    restart: always
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"

